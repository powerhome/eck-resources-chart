fullnameOverride: eck

elasticsearch:
  enabled: true
  credentials:
    enabled: true
  version: 7.16.3
  secretConfig:
    xpack.security.authc.realms.oidc.dex.rp.client_secret: client_secret
  config:
    node.store.allow_mmap: false
    ingest.geoip.downloader.enabled: false
    xpack.security.http.ssl.enabled: true
    xpack.security.authc:
      token.enabled: true
      realms.oidc:
        dex:
          order: 0
          op:
            issuer: "https://dex.example.com/"
            authorization_endpoint: "https://dex.example.com/auth"
            token_endpoint: "https://dex.example.com/token"
            jwkset_path: "https://dex.example.com/keys"
            userinfo_endpoint: "https://dex.example.com/userinfo"
          rp:
            client_id: "infra-eck"
            response_type: code
            redirect_uri: "https://kibana.example.com/api/security/oidc/callback"
            post_logout_redirect_uri: "https://kibana.example.com/security/logged_out"
            signature_algorithm: RS256
            requested_scopes:
            - groups
            - openid
            - profile
            - email
          claims:
            principal: name
            groups: groups
            mail: email
  nodeSets:
  - name: default
    count: 1
    config:
      node:
        roles: [master, data, ingest]
    resources:
      requests:
        cpu: "2"
        ephemeral-storage: 100Mi
        memory: "4Gi"
      limits:
        cpu: "4"
        ephemeral-storage: 100Mi
        memory: "4Gi"
    env:
    - name: ES_JAVA_OPTS
      value: "-Xmx2g -Xms2g -XX:MaxRAM=3072m"
kibana:
  enabled: true
  version: 7.16.3
  count: 1
  config:
    server.publicBaseUrl: https://kibana.example.com
    xpack.security.authc.providers:
      oidc.dex:
        order: 0
        realm: "dex"
      basic.basic1:
        order: 1
  http:
    tls:
      certificate:
        secretName: kibana-server-tls #same as ingress secret name
  ingress:
    enabled: true
    port: 5601
    annotations:
      cert-manager.io/cluster-issuer: production-certs
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    hosts:
    - kibana.example.com
    tls:
    - secretName: kibana-server-tls
      hosts:
      - kibana.example.com
    routePrefix: /
